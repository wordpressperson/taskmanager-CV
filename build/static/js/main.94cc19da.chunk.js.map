{"version":3,"sources":["components/App/testData.js","components/myname.js","components/footercomp.js","components/headercomp.js","components/App/films.js","components/App/App.js","serviceWorker.js","index.js"],"names":["testData","id","text","completed","MyName","props","react_default","a","createElement","className","message","FooterComp","styles","fontStyle","backgroundColor","HeaderComp","style","Films","type","checked","onChange","handleChange","textDecoration","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","testDataItem","count","bind","assertThisInitialized","thisID","setState","prevState","map","todo","_this2","testDataItems","textitem","films","key","myname","footercomp","headercomp","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94cc19da.chunk.js","sourcesContent":["const testData = [\n\t{\n\t\tid:1,\n\t\ttext: \"Wash clothes at home \",\n\t\tcompleted:true\n\t},\n\n\t{\n\t\tid:2,\n\t\ttext: \"Pick siblings from school \",\n\t\tcompleted:true\n\t},\n\n\t{\n\t\tid:3,\n\t\ttext: \"Watch el clasico game \",\n\t\tcompleted:false \n\t},\n\n\t{\n\t\tid:4,\n\t\ttext: \"Do some programming and Wikipedia edits\",\n\t\tcompleted: false \n\t}\n]\n\n\nexport default testData;\n","import React from \"react\";\nimport \"../index.css\";\n\nconst MyName = (props) => (\n<p className=\"MyName\">\n\t{props.message}\n</p>\n);\n\nexport default MyName;","import React from \"react\";\nimport \"../index.css\";\n\nconst FooterComp = (props) => (\n<p className=\"FooterComp\">\n\tThis is the footer component\n</p>\n);\n\nexport default FooterComp;","import React from \"react\";\n\nconst xvariable=5;\n\nconst styles= {\n\t\tfontStyle: 'italic', \n\t\tbackgroundColor: '#108003'\n\t}\n\n\tif (xvariable==4)\n\t{\n\t\tstyles.color= \"red\";\n\t}\n\nconst HeaderComp = (props) => (\n\t<p style={styles}>\n\t\tThis is the header component \n\t</p>\n);\n\nexport default HeaderComp;","import React from \"react\";\nimport \"./App.css\";\n\nconst Films = (props) => (\n\t<div className=\"Films\">\n\t\t<input \n\t\ttype=\"checkbox\" \n\t\tchecked={props.completed}\n\t\tonChange={() => props.handleChange(props.id)}\n\t\t/>\n\n\t\t<p style={{textDecoration: props.completed ? 'line-through' :null}}>\n\t\t   {props.text}\n\t\t</p>\n\t</div>\n);\n\nexport default Films;\n\n\n","import React, { Component } from 'react';\nimport testData from './testData.js';\nimport './App.css';\n\nimport MyName from \"../myname.js\";\nimport HeaderComp from \"../footercomp.js\";\nimport FooterComp from \"../headercomp.js\";\nimport Films from \"./films.js\"\n\nclass App extends Component {\n\n\nconstructor() {\nsuper();\nthis.state = {\n    testDataItem: testData,  \n    count: [\n        {id: 1},\n        {id: 2},\n        {id: 3},\n        {id: 4}\n        ]\n           }\nthis.handleChange = this.handleChange.bind(this)\n}\n\nhandleChange(thisID) {\n    this.setState(prevState => {\n        const updatedTodos = prevState.testDataItem.map(todo => {\n            if (todo.id === thisID) {\n                todo.completed = !todo.completed\n            }\n            return todo\n        })\n        return {\n            testDataItem: updatedTodos\n        }\n    })\n    \n }\n\n  \n\n  render() {\n    const testDataItems=this.state.testDataItem.map(textitem => <Films text={textitem.text} \n        completed={textitem.completed} \n            key={textitem.id} \n            handleChange={() => this.handleChange(textitem.id)}/>)        \n         \n\n    return (\n      <div>\n        <MyName message=\"This is the main component\"/>\n        <div className=\"FilmList\">\n        \n        {testDataItems}\n\n        </div>\n        <HeaderComp />\n        <FooterComp />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}